# Generated by Django 5.2.4 on 2025-08-01 13:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, verbose_name="Nome")),
                (
                    "celular",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Celular"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="Email"
                    ),
                ),
                ("data_primeiro_pedido", models.DateTimeField(auto_now_add=True)),
                ("data_ultimo_pedido", models.DateTimeField(auto_now=True)),
                ("total_pedidos", models.IntegerField(default=0)),
                (
                    "valor_total_gasto",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["-data_ultimo_pedido"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "tipo_usuario",
                    models.CharField(
                        choices=[
                            ("superadmin", "Super Administrador"),
                            ("lojista", "Lojista/Proprietário"),
                            ("gerente", "Gerente"),
                            ("funcionario", "Funcionário"),
                            ("cliente", "Cliente"),
                        ],
                        default="cliente",
                        max_length=15,
                    ),
                ),
                ("telefone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="EnderecoCliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "apelido",
                    models.CharField(max_length=50, verbose_name="Nome do Endereço"),
                ),
                (
                    "endereco",
                    models.CharField(max_length=200, verbose_name="Rua/Avenida"),
                ),
                ("numero", models.CharField(max_length=10, verbose_name="Número")),
                (
                    "complemento",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Complemento"
                    ),
                ),
                ("bairro", models.CharField(max_length=100, verbose_name="Bairro")),
                ("cidade", models.CharField(max_length=100, verbose_name="Cidade")),
                ("estado", models.CharField(max_length=2, verbose_name="Estado")),
                ("cep", models.CharField(max_length=10, verbose_name="CEP")),
                (
                    "referencia",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Ponto de Referência"
                    ),
                ),
                (
                    "eh_principal",
                    models.BooleanField(
                        default=False, verbose_name="Endereço Principal"
                    ),
                ),
                ("vezes_utilizado", models.IntegerField(default=0)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enderecos",
                        to="accounts.cliente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Endereço do Cliente",
                "verbose_name_plural": "Endereços dos Clientes",
            },
        ),
    ]
