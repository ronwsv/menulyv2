# Generated by Django 5.2.4 on 2025-07-31 19:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("pedidos", "0001_initial"),
        ("restaurantes", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConfiguracaoImpressora",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("termica", "Térmica"),
                            ("laser", "Laser"),
                            ("matricial", "Matricial"),
                            ("usb", "USB Local"),
                            ("rede", "Rede/IP"),
                        ],
                        default="termica",
                        max_length=20,
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, help_text="IP para impressoras de rede", null=True
                    ),
                ),
                (
                    "porta",
                    models.IntegerField(
                        default=9100, help_text="Porta para impressoras de rede"
                    ),
                ),
                (
                    "caminho_usb",
                    models.CharField(
                        blank=True,
                        help_text="Caminho do dispositivo USB (ex: /dev/usb/lp0, COM1)",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("ativa", models.BooleanField(default=True)),
                (
                    "auto_imprimir_pedido",
                    models.BooleanField(
                        default=False,
                        help_text="Imprimir automaticamente ao receber pedido",
                    ),
                ),
                (
                    "imprimir_cozinha",
                    models.BooleanField(
                        default=False, help_text="Imprimir pedido para a cozinha"
                    ),
                ),
                (
                    "imprimir_balcao",
                    models.BooleanField(
                        default=True, help_text="Imprimir pedido para o balcão"
                    ),
                ),
                (
                    "largura_papel",
                    models.IntegerField(default=58, help_text="Largura do papel em mm"),
                ),
                ("cortar_papel", models.BooleanField(default=True)),
                ("imprimir_logo", models.BooleanField(default=True)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                (
                    "restaurante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="impressoras_config",
                        to="restaurantes.restaurante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração de Impressora",
                "verbose_name_plural": "Configurações de Impressoras",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="LogImpressao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_impressao",
                    models.CharField(
                        choices=[
                            ("pedido", "Pedido"),
                            ("teste", "Teste"),
                            ("relatorio", "Relatório"),
                        ],
                        default="pedido",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("sucesso", "Sucesso"),
                            ("erro", "Erro"),
                            ("pendente", "Pendente"),
                        ],
                        default="pendente",
                        max_length=20,
                    ),
                ),
                ("mensagem_erro", models.TextField(blank=True)),
                ("tentativas", models.IntegerField(default=0)),
                ("impresso_em", models.DateTimeField(auto_now_add=True)),
                (
                    "impressora",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="lojistas.configuracaoimpressora",
                    ),
                ),
                (
                    "pedido",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs_impressao",
                        to="pedidos.pedido",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Impressão",
                "verbose_name_plural": "Logs de Impressão",
                "ordering": ["-impresso_em"],
            },
        ),
    ]
