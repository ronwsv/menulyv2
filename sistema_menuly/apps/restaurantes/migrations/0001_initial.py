# Generated by Django 5.2.4 on 2025-07-31 11:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Categoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome da Categoria"),
                ),
                ("descricao", models.TextField(blank=True, verbose_name="Descrição")),
                (
                    "imagem",
                    models.ImageField(
                        blank=True, upload_to="categorias/", verbose_name="Imagem"
                    ),
                ),
                (
                    "ordem",
                    models.IntegerField(default=0, verbose_name="Ordem de Exibição"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
            ],
            options={
                "verbose_name": "Categoria",
                "verbose_name_plural": "Categorias",
                "ordering": ["ordem", "nome"],
            },
        ),
        migrations.CreateModel(
            name="OpcoesProduto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome do Grupo"),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("radio", "Seleção Única (Radio)"),
                            ("checkbox", "Múltipla Seleção (Checkbox)"),
                        ],
                        default="radio",
                        max_length=10,
                        verbose_name="Tipo de Seleção",
                    ),
                ),
                (
                    "obrigatorio",
                    models.BooleanField(default=False, verbose_name="Obrigatório"),
                ),
                ("ordem", models.IntegerField(default=0, verbose_name="Ordem")),
            ],
            options={
                "verbose_name": "Opções do Produto",
                "verbose_name_plural": "Opções dos Produtos",
                "ordering": ["ordem", "nome"],
            },
        ),
        migrations.CreateModel(
            name="PlanoMensal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome do Plano"),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("basico", "Básico"),
                            ("premium", "Premium"),
                            ("enterprise", "Enterprise"),
                        ],
                        max_length=20,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "preco_mensal",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Preço Mensal"
                    ),
                ),
                (
                    "max_pedidos_mes",
                    models.IntegerField(verbose_name="Máximo de Pedidos/Mês"),
                ),
                (
                    "max_produtos",
                    models.IntegerField(verbose_name="Máximo de Produtos"),
                ),
                (
                    "max_restaurantes",
                    models.IntegerField(
                        default=1, verbose_name="Máximo de Restaurantes"
                    ),
                ),
                (
                    "tem_impressoras",
                    models.BooleanField(
                        default=False, verbose_name="Suporte a Impressoras"
                    ),
                ),
                (
                    "tem_multi_unidades",
                    models.BooleanField(
                        default=False, verbose_name="Múltiplas Unidades"
                    ),
                ),
                (
                    "tem_relatorios",
                    models.BooleanField(
                        default=False, verbose_name="Relatórios Avançados"
                    ),
                ),
                (
                    "tem_api",
                    models.BooleanField(default=False, verbose_name="Acesso à API"),
                ),
                (
                    "tem_dominio_personalizado",
                    models.BooleanField(
                        default=False, verbose_name="Domínio Personalizado"
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
            ],
            options={
                "verbose_name": "Plano Mensal",
                "verbose_name_plural": "Planos Mensais",
                "ordering": ["preco_mensal"],
            },
        ),
        migrations.CreateModel(
            name="ItemOpcao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, verbose_name="Nome do Item")),
                (
                    "preco_adicional",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        verbose_name="Preço Adicional",
                    ),
                ),
                (
                    "disponivel",
                    models.BooleanField(default=True, verbose_name="Disponível"),
                ),
                ("ordem", models.IntegerField(default=0, verbose_name="Ordem")),
                (
                    "opcao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="itens",
                        to="restaurantes.opcoesproduto",
                        verbose_name="Opção",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item da Opção",
                "verbose_name_plural": "Itens das Opções",
                "ordering": ["ordem", "nome"],
            },
        ),
        migrations.CreateModel(
            name="Lojista",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome_completo",
                    models.CharField(max_length=200, verbose_name="Nome Completo"),
                ),
                (
                    "cpf",
                    models.CharField(max_length=14, unique=True, verbose_name="CPF"),
                ),
                ("telefone", models.CharField(max_length=20, verbose_name="Telefone")),
                (
                    "data_inicio_plano",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Início do Plano"
                    ),
                ),
                ("data_vencimento", models.DateField(verbose_name="Vencimento")),
                (
                    "trial_ativo",
                    models.BooleanField(default=True, verbose_name="Trial Ativo"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "suspenso",
                    models.BooleanField(default=False, verbose_name="Suspenso"),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
                (
                    "plano",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="restaurantes.planomensal",
                        verbose_name="Plano Atual",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lojista",
                "verbose_name_plural": "Lojistas",
            },
        ),
        migrations.CreateModel(
            name="Produto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=200, verbose_name="Nome do Produto"),
                ),
                ("descricao", models.TextField(verbose_name="Descrição")),
                (
                    "preco",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Preço"
                    ),
                ),
                (
                    "imagem_principal",
                    models.ImageField(
                        upload_to="produtos/", verbose_name="Imagem Principal"
                    ),
                ),
                (
                    "imagem_extra_1",
                    models.ImageField(
                        blank=True, upload_to="produtos/", verbose_name="Imagem Extra 1"
                    ),
                ),
                (
                    "imagem_extra_2",
                    models.ImageField(
                        blank=True, upload_to="produtos/", verbose_name="Imagem Extra 2"
                    ),
                ),
                (
                    "disponivel",
                    models.BooleanField(default=True, verbose_name="Disponível"),
                ),
                (
                    "destaque",
                    models.BooleanField(default=False, verbose_name="Em Destaque"),
                ),
                (
                    "ordem",
                    models.IntegerField(default=0, verbose_name="Ordem de Exibição"),
                ),
                (
                    "calorias",
                    models.IntegerField(blank=True, null=True, verbose_name="Calorias"),
                ),
                (
                    "tempo_preparo",
                    models.IntegerField(
                        default=15, verbose_name="Tempo de Preparo (min)"
                    ),
                ),
                (
                    "ingredientes",
                    models.TextField(blank=True, verbose_name="Ingredientes"),
                ),
                ("alergenos", models.TextField(blank=True, verbose_name="Alergênicos")),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "categoria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="produtos",
                        to="restaurantes.categoria",
                        verbose_name="Categoria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Produto",
                "verbose_name_plural": "Produtos",
                "ordering": ["categoria", "ordem", "nome"],
            },
        ),
        migrations.AddField(
            model_name="opcoesproduto",
            name="produto",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="opcoes",
                to="restaurantes.produto",
                verbose_name="Produto",
            ),
        ),
        migrations.CreateModel(
            name="Restaurante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        max_length=200, verbose_name="Nome do Restaurante"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        max_length=200, unique=True, verbose_name="URL Personalizada"
                    ),
                ),
                (
                    "cnpj",
                    models.CharField(blank=True, max_length=18, verbose_name="CNPJ"),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="Email")),
                ("telefone", models.CharField(max_length=20, verbose_name="Telefone")),
                (
                    "whatsapp",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="WhatsApp"
                    ),
                ),
                ("endereco_rua", models.CharField(max_length=200, verbose_name="Rua")),
                (
                    "endereco_numero",
                    models.CharField(max_length=20, verbose_name="Número"),
                ),
                (
                    "endereco_complemento",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Complemento"
                    ),
                ),
                (
                    "endereco_bairro",
                    models.CharField(max_length=100, verbose_name="Bairro"),
                ),
                (
                    "endereco_cidade",
                    models.CharField(max_length=100, verbose_name="Cidade"),
                ),
                (
                    "endereco_estado",
                    models.CharField(max_length=2, verbose_name="Estado"),
                ),
                ("endereco_cep", models.CharField(max_length=9, verbose_name="CEP")),
                (
                    "cor_primaria",
                    models.CharField(
                        default="#667eea", max_length=7, verbose_name="Cor Primária"
                    ),
                ),
                (
                    "cor_secundaria",
                    models.CharField(
                        default="#764ba2", max_length=7, verbose_name="Cor Secundária"
                    ),
                ),
                (
                    "cor_fundo",
                    models.CharField(
                        default="#ffffff", max_length=7, verbose_name="Cor de Fundo"
                    ),
                ),
                (
                    "cor_texto",
                    models.CharField(
                        default="#333333", max_length=7, verbose_name="Cor do Texto"
                    ),
                ),
                (
                    "cor_botoes",
                    models.CharField(
                        default="#28a745", max_length=7, verbose_name="Cor dos Botões"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True, upload_to="restaurantes/logos/", verbose_name="Logo"
                    ),
                ),
                (
                    "banner",
                    models.ImageField(
                        blank=True,
                        upload_to="restaurantes/banners/",
                        verbose_name="Banner Principal",
                    ),
                ),
                (
                    "favicon",
                    models.ImageField(
                        blank=True,
                        upload_to="restaurantes/favicons/",
                        verbose_name="Favicon",
                    ),
                ),
                (
                    "slogan",
                    models.CharField(blank=True, max_length=200, verbose_name="Slogan"),
                ),
                (
                    "mensagem_boas_vindas",
                    models.TextField(
                        blank=True, verbose_name="Mensagem de Boas-vindas"
                    ),
                ),
                ("sobre_nos", models.TextField(blank=True, verbose_name="Sobre Nós")),
                (
                    "taxa_entrega",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        verbose_name="Taxa de Entrega",
                    ),
                ),
                (
                    "tempo_estimado_entrega",
                    models.IntegerField(
                        default=30, verbose_name="Tempo Estimado (min)"
                    ),
                ),
                (
                    "raio_entrega_km",
                    models.DecimalField(
                        decimal_places=2,
                        default=5,
                        max_digits=5,
                        verbose_name="Raio de Entrega (km)",
                    ),
                ),
                (
                    "aceita_pedidos",
                    models.BooleanField(default=True, verbose_name="Aceita Pedidos"),
                ),
                (
                    "pedido_minimo",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=8,
                        verbose_name="Pedido Mínimo",
                    ),
                ),
                (
                    "funciona_segunda",
                    models.BooleanField(default=True, verbose_name="Funciona Segunda"),
                ),
                (
                    "horario_segunda_abertura",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Abertura Segunda"
                    ),
                ),
                (
                    "horario_segunda_fechamento",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fechamento Segunda"
                    ),
                ),
                (
                    "funciona_terca",
                    models.BooleanField(default=True, verbose_name="Funciona Terça"),
                ),
                (
                    "horario_terca_abertura",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Abertura Terça"
                    ),
                ),
                (
                    "horario_terca_fechamento",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fechamento Terça"
                    ),
                ),
                (
                    "funciona_quarta",
                    models.BooleanField(default=True, verbose_name="Funciona Quarta"),
                ),
                (
                    "horario_quarta_abertura",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Abertura Quarta"
                    ),
                ),
                (
                    "horario_quarta_fechamento",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fechamento Quarta"
                    ),
                ),
                (
                    "funciona_quinta",
                    models.BooleanField(default=True, verbose_name="Funciona Quinta"),
                ),
                (
                    "horario_quinta_abertura",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Abertura Quinta"
                    ),
                ),
                (
                    "horario_quinta_fechamento",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fechamento Quinta"
                    ),
                ),
                (
                    "funciona_sexta",
                    models.BooleanField(default=True, verbose_name="Funciona Sexta"),
                ),
                (
                    "horario_sexta_abertura",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Abertura Sexta"
                    ),
                ),
                (
                    "horario_sexta_fechamento",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fechamento Sexta"
                    ),
                ),
                (
                    "funciona_sabado",
                    models.BooleanField(default=True, verbose_name="Funciona Sábado"),
                ),
                (
                    "horario_sabado_abertura",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Abertura Sábado"
                    ),
                ),
                (
                    "horario_sabado_fechamento",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fechamento Sábado"
                    ),
                ),
                (
                    "funciona_domingo",
                    models.BooleanField(default=False, verbose_name="Funciona Domingo"),
                ),
                (
                    "horario_domingo_abertura",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Abertura Domingo"
                    ),
                ),
                (
                    "horario_domingo_fechamento",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Fechamento Domingo"
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "aprovado",
                    models.BooleanField(default=False, verbose_name="Aprovado"),
                ),
                (
                    "destaque",
                    models.BooleanField(default=False, verbose_name="Em Destaque"),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "lojista",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurantes",
                        to="restaurantes.lojista",
                        verbose_name="Lojista",
                    ),
                ),
            ],
            options={
                "verbose_name": "Restaurante",
                "verbose_name_plural": "Restaurantes",
                "ordering": ["nome"],
            },
        ),
        migrations.AddField(
            model_name="produto",
            name="restaurante",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="produtos",
                to="restaurantes.restaurante",
                verbose_name="Restaurante",
            ),
        ),
        migrations.CreateModel(
            name="ConfiguracaoImpressora",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome da Impressora"),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("termica", "Térmica"), ("laser", "Laser")],
                        default="termica",
                        max_length=10,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "conexao",
                    models.CharField(
                        choices=[("usb", "USB"), ("rede", "Rede")],
                        default="usb",
                        max_length=10,
                        verbose_name="Tipo de Conexão",
                    ),
                ),
                (
                    "ip_rede",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP da Rede"
                    ),
                ),
                (
                    "porta_rede",
                    models.IntegerField(blank=True, null=True, verbose_name="Porta"),
                ),
                (
                    "caminho_usb",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Caminho USB"
                    ),
                ),
                (
                    "auto_imprimir",
                    models.BooleanField(
                        default=True, verbose_name="Impressão Automática"
                    ),
                ),
                (
                    "cortar_papel",
                    models.BooleanField(default=True, verbose_name="Cortar Papel"),
                ),
                (
                    "largura_papel",
                    models.IntegerField(
                        default=80, verbose_name="Largura do Papel (mm)"
                    ),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "restaurante",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="impressoras",
                        to="restaurantes.restaurante",
                        verbose_name="Restaurante",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração de Impressora",
                "verbose_name_plural": "Configurações de Impressoras",
            },
        ),
        migrations.AddField(
            model_name="categoria",
            name="restaurante",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="categorias",
                to="restaurantes.restaurante",
                verbose_name="Restaurante",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="categoria",
            unique_together={("restaurante", "nome")},
        ),
    ]
